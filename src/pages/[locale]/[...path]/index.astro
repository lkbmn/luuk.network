---
import {
  SiteLocale,
  type PageQuery,
  type PageQueryVariables,
  type PathsQuery,
  type PathsQueryVariables
} from "@generated/datocms";
import { executeQuery } from "@datocms/execute-query";
import pathsQuery from "@datocms/paths.query.graphql";
import pageQuery from "./_index.query.graphql";
import { BlogPost, OverviewPage, ProjectPage, RegularPage } from "@layouts";

export const getStaticPaths = async () => {
  const { allPages } = await executeQuery<PathsQuery, PathsQueryVariables>(
    pathsQuery
  );

  return allPages.flatMap((item) => {
    if (!item._allPathLocales) return [];

    return item._allPathLocales.map(({ locale, value }) => ({
      params: {
        locale: locale as SiteLocale,
        ...(value && { path: value })
      }
    }));
  });
};

const { locale, path } = Astro.params;
const { _site, page } = await executeQuery<PageQuery, PageQueryVariables>(pageQuery, {
  path,
  locale
});

if (!page) {
  return new Response("", { status: 404 });
}

const layoutsByTypename = {
  BlogPostRecord: BlogPost,
  OverviewPageRecord: OverviewPage,
  ProjectPageRecord: ProjectPage,
  RegularPageRecord: RegularPage
};
const typename = page.content?.__typename as keyof typeof layoutsByTypename;
const Layout = layoutsByTypename[typename];
---

<Layout
    locale={locale}
    seo={[..._site.faviconMetaTags, ...page._seoMetaTags]}
    page={page}
/>
